#pragma once

enum DEFAULT_KEYWORD { DEFAULT_KEYWORDS_COUNT = 0 };

const char *default_keywords[DEFAULT_KEYWORDS_COUNT] = {};

enum COMMENT_KEYWORD {
  COMMENT_TODO = 0,
  COMMENT_NOTE,
  COMMENT_FIXME,
  COMMENT_REVIEWME,
  COMMENT_HACK,
  COMMENT_REMOVEME,
  COMMENT_MAYBE,
  COMMENT_EXAMPLE,
  COMMENT_REFACTOR,
  COMMENT_KEYWORDS_COUNT
};

const char *comment_keywords[COMMENT_KEYWORDS_COUNT] = {
    "TODO",     "NOTE",  "FIXME",   "REVIEWME",  "HACK",
    "REMOVEME", "MAYBE", "EXAMPLE", "REFACTORME"};

enum C_KEYWORD {
  C_ALIGNAS = 0,
  C_ALIGNOF,
  C_ASSERT,
  C_AUTO,
  C_BOOL,
  C_BREAK,
  C_CASE,
  C_CHAR,
  C_CONST,
  C_CONSTEXPR,
  C_CONTINUE,
  C_DEFAULT,
  C_DEFINE,
  C_DO,
  C_DOUBLE,
  C_ELSE,
  C_ENUM,
  C_EXTERN,
  C_FALSE,
  C_FLOAT,
  C_FOR,
  C_GOTO,
  C_IF,
  C_INCLUDE,
  C_INLINE,
  C_INT,
  C_LONG,
  C_NULL,
  C_NULLPTR,
  C_PRAGMA,
  C_REGISTER,
  C_RESTRICT,
  C_RETURN,
  C_SHORT,
  C_SIGNED,
  C_SIZEOF,
  C_STATIC,
  C_STATIC_ASSERT,
  C_STRUCT,
  C_SWITCH,
  C_THREAD_LOCAL,
  C_TRUE,
  C_TYPEDEF,
  C_TYPEOF,
  C_TYPEOF_UNQUAL,
  C_UNION,
  C_UNSIGNED,
  C_VOID,
  C_VOLATILE,
  C_WHILE,
  C_KEYWORDS_COUNT
};

const char *c_keywords[C_KEYWORDS_COUNT] = {"alignas",
                                            "alignof",
                                            "assert",
                                            "auto",
                                            "bool",
                                            "break",
                                            "case",
                                            "char",
                                            "const",
                                            "constexpr",
                                            "continue",
                                            "default",
                                            "define",
                                            "do",
                                            "double",
                                            "else",
                                            "enum",
                                            "extern",
                                            "false",
                                            "float",
                                            "for",
                                            "goto",
                                            "if",
                                            "include",
                                            "inline",
                                            "int",
                                            "long",
                                            "NULL",
                                            "nullptr",
                                            "pragma",
                                            "register",
                                            "restrict",
                                            "return",
                                            "short",
                                            "signed",
                                            "sizeof",
                                            "static",
                                            "static_assert",
                                            "struct",
                                            "switch",
                                            "thread_local",
                                            "true",
                                            "typedef",
                                            "typeof",
                                            "typeof_unqual",
                                            "union",
                                            "unsigned",
                                            "void",
                                            "volatile",
                                            "while"};

enum GO_KEYWORD {
  GO_BOOL,
  GO_BREAK,
  GO_BYTE,
  GO_CASE,
  GO_CHAN,
  GO_COMPLEX128,
  GO_COMPLEX64,
  GO_CONST,
  GO_CONTINUE,
  GO_DEFAULT,
  GO_DEFER,
  GO_ELSE,
  GO_FALLTHROUGH,
  GO_FLOAT32,
  GO_FLOAT64,
  GO_FOR,
  GO_FUNC,
  GO_GO,
  GO_GOTO,
  GO_IF,
  GO_IMPORT,
  GO_INT,
  GO_INT16,
  GO_INT32,
  GO_INT64,
  GO_INT8,
  GO_INTERFACE,
  GO_MAP,
  GO_PACKAGE,
  GO_RANGE,
  GO_RETURN,
  GO_RUNE,
  GO_SELECT,
  GO_STRING,
  GO_STRUCT,
  GO_SWITCH,
  GO_TYPE,
  GO_UINT,
  GO_UINT16,
  GO_UINT32,
  GO_UINT64,
  GO_UINT8,
  GO_UINTPTR,
  GO_VAR,
  GO_KEYWORDS_COUNT
};

const char *go_keywords[GO_KEYWORDS_COUNT] = {
    "bool",        "break",   "byte",      "case",    "chan",    "complex128",
    "complex64",   "const",   "continue",  "default", "defer",   "else",
    "fallthrough", "float32", "float64",   "for",     "func",    "go",
    "goto",        "if",      "import",    "int",     "int16",   "int32",
    "int64",       "int8",    "interface", "map",     "package", "range",
    "return",      "rune",    "select",    "string",  "struct",  "switch",
    "type",        "uint",    "uint16",    "uint32",  "uint64",  "uint8",
    "uintptr",     "var",
};

enum MD_KEYWORD {
  MD_HEADING,
  MD_BOLD_ITALIC,
  MD_BLOCKQUOTE,
  MD_UNORDERED_LIST,
  MD_CODE,
  MD_HORIZONTAL_RULE,
  MD_STRIKETHROUGH,
  MD_KEYWORDS_COUNT
};

const char *md_keywords[MD_KEYWORDS_COUNT] = {
    "#", "*", ">", "-", "`", "---", "~",
};